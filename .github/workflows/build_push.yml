name: Build and push 🏗️

on:
  workflow_dispatch:
    branches:
      - 'migrate-to-gcp'
      - 'main'
    inputs:
      tags:
        description: 'Enter trigger reason:' 
  push:
    branches:
      - 'main'
    paths:
      - 'app/**'
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    environment: production
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
    - name: 👀 Checkout
      uses: actions/checkout@v3
      
    - name: 🕣 Get current date
      id: date
      run: echo "::set-output name=date::$(date +%F.%H%M%S)"

    # Using workload identity federation
    # https://github.com/marketplace/actions/authenticate-to-google-cloud#setup
    - name: 🔐 Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      with:
        token_format: 'access_token' # Needed to generate oauth 2.0 access token to be used in furter workflow steps.
        workload_identity_provider: ${{ secrets.GCP_GH_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_GH_SA_EMAIL }}
        access_token_lifetime: 300s

    - name: ✍️ Login to GAR
      uses: docker/login-action@v2
      with:
        registry: europe-north1-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: 🏗️ Build, tag, and push image to GCR 📬
      env:
        GCR_REGISTRY: 'europe-north1-docker.pkg.dev'
        GCR_PROJECT_ID: ${{ steps.auth.outputs.project_id }}
        GAR_REPO: ${{ secrets.GAR_REPO_NAME }}
        IMAGE_TAG: ${{ steps.date.outputs.date }} 
      run: |
        docker build -t $GCR_REGISTRY/$GCR_PROJECT_ID/$GAR_REPO:$IMAGE_TAG -t $GCR_REGISTRY/$GCR_PROJECT_ID/$GAR_REPO:latest .
        docker push --all-tags $GCR_REGISTRY/$GCR_PROJECT_ID/$GAR_REPO
  
    # - name: Configure AWS credentials 🔐
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     role-to-assume: ${{ secrets.AWS_ROLE_FOR_GITHUB }}
    #     role-session-name: GitHub-Action-ECR-Push
    #     aws-region: eu-north-1
    
    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1
